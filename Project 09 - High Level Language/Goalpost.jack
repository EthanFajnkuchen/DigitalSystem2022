class Goalpost {
    field int y;
    field int return_value;
    field int current_score;
    field int chance;
    field in speed;

    //constructor
    constructor Goalpost new(int level) {
        let speed = level;
        let return_value = 0;
        let chance = 5;
        let y = 0;
        return this;
    }
    // draw a goalpost
    method void drawGoalpost(boolean black) {
            do Screen.setColor(black);
            do Screen.drawLine(504, y, 511, y);
            do Screen.setColor(false);
            return;
        } 
    //make the shooting move
    method void move(Player player) {
        var boolean set;
        var boolean isShooting;
        var boolean moving_down;
        var boolean shoot;
        var int key;
        let isShooting = true;
        let moving_down = true;
        let shoot = false;
        while (isShooting) {
            let key = Keyboard.keyPressed();
            if (key = 32 & ~(shoot)) {
                let shoot = true;
                do player.shoot_start(4101);
            }
            if (shoot) {
                do player.shoot();
            }
            if (player.hit() & chance > 0) {
                let current_score = calc_score();
                let chance = chance - 1;
                let return_value = return_value + current_score;
                do player.disappear();
                do player.blow(3805);
                do score();
                do Sys.wait(1000);
                let player = Player.new(0,0,speed);
                let shoot = false;
            }
            if (chance = 0) {
                return;
            }
            if (y < 159 & (moving_down)) {
                do move_down();
                let y = y + 1;
            }
            if (y = 159) {
                let moving_down = false;
            }
            if (y > 0 & ~(moving_down)) {
                do move_up();
                let y = y - 1;
            }
            if (y = 0) {
                let moving_down = true;
            }
        }
        return;
    }
    // a method that make a score
    method int calc_score() {
            //We find a formula to calc the range of the goalpost
            var int center;
            var int diff;
            let center = y+20;
            if(center>120)
            {
                let diff = center - 120;
            }
            else
            {
                let diff = 120 - center;
            }
            if (diff < 40) {
                return 1;
            }
            return 0;
        }

    // make the goalpost movedown
    method void move_down()  {
        do Screen.setColor(true);
        do Screen.drawLine(504, 60 + y + 1, 511, 60 + y + 1);
        do Screen.setColor(false);
        do Screen.drawLine(504, y, 511, y);
        do Sys.wait(10);
        return;
    }
    //make the goalpost move up
    method void move_up() {
        do Screen.setColor(true);
        do Screen.drawLine(504, y-1, 511, y-1);
        do Screen.setColor(false);
        do Screen.drawLine(504, 60 + y, 511, 60 + y);
        do Sys.wait(10);
        return;
    }


    /* We print to the screen the number of totals goals, the shoot left to the player and if the player score/miss */
    method void score() {
        if (current_score = 1) {
            do Output.moveCursor(3,17);
            do Output.printString("GOOOOOOOOOOOOOAAAAAAAAAAAAL");
        } else {
            if (chance < 5) {
                do Output.moveCursor(3,12);
                do Output.printString("NO WORRIES, YOU WILL SCORE NEXT TIME!");
            }
        }
        do Output.moveCursor(5,20);
        do Output.printString("YOUR SHOOTS LEFT:");
        do Output.moveCursor(5,40);
        do Output.printInt(chance);
        do Output.moveCursor(7, 20);
        do Output.printString("YOUR TOTAL GOAL IS:");
        do Output.moveCursor(7, 40);
        do Output.printInt(return_value);
        do Output.moveCursor(3,11);
        do Sys.wait(1500);
        do Output.printString("                                         ");
        return;
    }

    /* At the end of each level, we print the total goal scored during the level*/
    method void end() {
       do Output.moveCursor(7, 20);
        do Output.printString("YOUR TOTAL GOAL IS:");
        do Output.moveCursor(7, 40);
        do Output.printInt(return_value); 
        return;
    }

    /* Getter to the final score in order to determine if the player can pass to next level */
    method int getFinalValue() {
        return return_value;
    }

    /* After using the goalpost object, we deallocate it */
    method void dispose() {
        do player.disappear();
        do Memory.deAlloc(this);
        return;
    }
}