class Ball {
    field int speed;
    field int x;
    constructor Ball new(int Aspeed) {
        let x = 0;
        let speed = Aspeed;
        return this;
    }

    /* We draw the ball on the screen*/
    method void drawball() {
        do Screen.drawCircle((x+104),120,7);
        return;
    }

    /* A method to make the ball move towards the goal according to its speed */
    method void move() {
        do Screen.setColor(true);
        do drawball();
        if (x < (378 - speed)) {
            do Screen.setColor(false);
            do drawball();
            let x = x + speed;
            do Screen.setColor(true);
            do drawball();
        }
        return;
    }
    
    /* We make the ball disappear */
    method void disappear() {
        do Screen.setColor(false);
        do drawball();
        do dispose();
        return;
    }

    /* After hitting the target, it will blow*/
    method void blow(int location) {
        var int memAddress;
        let memAddress = 16384+location;
        do Memory.poke(memAddress+0, 8192);
        do Memory.poke(memAddress+32, 30734);
        do Memory.poke(memAddress+64, 15388);
        do Memory.poke(memAddress+96, 2108);
        do Memory.poke(memAddress+128, 56);
        do Memory.poke(memAddress+160, 16384);
        do Memory.poke(memAddress+192, 10294);
        do Memory.poke(memAddress+224, 31806);
        do Memory.poke(memAddress+256, 10294);
        do Memory.poke(memAddress+288, 16384);
        do Memory.poke(memAddress+320, 8);
        do Memory.poke(memAddress+352, 10268);
        do Memory.poke(memAddress+384, 31948);
        do Memory.poke(memAddress+416, 14542);
        do Memory.poke(memAddress+448, 24710);
        do Memory.poke(memAddress+480, 0);
        do Sys.wait(1000);
        do Screen.setColor(false);
        do Screen.drawRectangle(465,118, 483,135);
        return;
    }

    /* We check if the ball hit the goalpost. */
    method boolean hit() {
        if (x > (378 - speed)) {
            return true;
        }
        if (x = (378 - speed)) {
            return true;
        }
        return false;
    }

    /* After using the ball, we deallocate our object */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}